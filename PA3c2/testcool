#!/bin/bash
set -e

# Check for exactly one argument
if [ $# -ne 1 ]; then
  echo "Usage: test <file.cl>"
  exit 1
fi

INPUT="$1"
BASE="${INPUT%.cl}"
TYPEFILE="${BASE}.cl-type"
ASM_REF="${BASE}Ref.s"
ASM_MINE="${BASE}.s"
EXE_REF="${BASE}Ref"
EXE_MINE="${BASE}Mine"
OUT_REF="reference_output"
OUT_MINE="my_output"

# Step 1: Typechecking
echo "üìò Step 1: Typechecking $INPUT..."
cool --type "$INPUT" || exit

# Step 2: Generate reference assembly
echo "üõ†Ô∏è  generating tac files..."
cool --tac "$TYPEFILE" --out "$BASE"Ref

# Step 2: Generate reference assembly
echo "üõ†Ô∏è  Step 2: Reference compiler generating assembly..."
cool --x86 "$TYPEFILE" --out "$BASE"Ref

# Step 3: Compile reference
echo "‚öôÔ∏è  Step 3: Compiling reference..."
gcc -no-pie -static "$ASM_REF" -g -o "$EXE_REF"

# Step 4: Run reference
echo "üöÄ Running reference executable..."
./"$EXE_REF" &> "$OUT_REF" || echo "‚ö†Ô∏è Reference program exited with error."

# Step 5: Your compiler generating assembly
echo "üõ†Ô∏è  Step 4: Your compiler generating assembly..."
./main.exe "$TYPEFILE"

# Step 6: Compile your output
echo "‚öôÔ∏è  Step 5: Compiling your output..."
gcc -no-pie -static "$ASM_MINE" -g

# Step 7: Run your executable
echo "üöÄ Running your executable..."
./a.out &> "$OUT_MINE" || echo "‚ö†Ô∏è Your program exited with error."

# Step 8: Print outputs
echo -e "\n==================== üì§ Reference Output ===================="
cat "$OUT_REF"
echo -e "\n==================== üì• Your Output ===================="
cat "$OUT_MINE"

# Step 9: Show diff
echo -e "\n==================== üîç DIFF ===================="
diff "$OUT_REF" "$OUT_MINE" || echo "‚ùó Outputs differ."

# Optional: Cleanup (you can comment this out if you want to inspect outputs)
# rm -f "$ASM_REF" "$ASM_MINE" "$EXE_REF" "$EXE_MINE" "$OUT_REF" "$OUT_MINE"

