digraph main_pre {
  n0 [label="(Node 0)\nstart\nt$2 <- y\n"];
 n0 -> n2 [label="!t$2"];
 n0 -> n1 [label="t$2"];
  n1 [label="(Node 1)\nthen branch\nt$3 <- \"not true\\\\n\"\n"];
 n1 -> n4 [label="true"];
  n2 [label="(Node 2)\nelse branch\nt$4 <- \"actually true\\\\n\"\n"];
 n2 -> n6 [label="true"];
  n3 [label="(Node 3)\nif-join\nobj1 <- new Object\nt$5 <- obj1\nobj2 <- new Object\nt$6 <- obj2\nt$8 <- \"\\\\n= comparison (Object !=): \"\n"];
 n3 -> n8 [label="true"];
  n4 [label="(Node 4)\nfcall-pre to out_string\nt$1 <- self.out_string(t$3,)\n"];
 n4 -> n5 [label="true"];
  n5 [label="(Node 5)\nfcall-post to out_string\n"];
 n5 -> n3 [label="true"];
  n6 [label="(Node 6)\nfcall-pre to out_string\nt$1 <- self.out_string(t$4,)\n"];
 n6 -> n7 [label="true"];
  n7 [label="(Node 7)\nfcall-post to out_string\n"];
 n7 -> n3 [label="true"];
  n8 [label="(Node 8)\nfcall-pre to out_string\nt$7 <- self.out_string(t$8,)\n"];
 n8 -> n9 [label="true"];
  n9 [label="(Node 9)\nfcall-post to out_string\nt$12 <- obj1\nt$13 <- obj2\nt$11 <- t$12 = t$13\n"];
 n9 -> n11 [label="!t$11"];
 n9 -> n10 [label="t$11"];
  n10 [label="(Node 10)\nthen branch\nt$10 <- 1\n"];
 n10 -> n12 [label="true"];
  n11 [label="(Node 11)\nelse branch\nt$10 <- 0\n"];
 n11 -> n12 [label="true"];
  n12 [label="(Node 12)\nif-join\n"];
 n12 -> n13 [label="true"];
  n13 [label="(Node 13)\nfcall-pre to out_int\nt$9 <- self.out_int(t$10,)\n"];
 n13 -> n14 [label="true"];
  n14 [label="(Node 14)\nfcall-post to out_int\nt$15 <- \"\\\\n= comparison (Object =): \"\n"];
 n14 -> n15 [label="true"];
  n15 [label="(Node 15)\nfcall-pre to out_string\nt$14 <- self.out_string(t$15,)\n"];
 n15 -> n16 [label="true"];
  n16 [label="(Node 16)\nfcall-post to out_string\nt$18 <- obj1\nt$19 <- obj1\nt$17 <- t$18 = t$19\n"];
 n16 -> n18 [label="!t$17"];
 n16 -> n17 [label="t$17"];
  n17 [label="(Node 17)\nthen branch\nt$16 <- 1\n"];
 n17 -> n19 [label="true"];
  n18 [label="(Node 18)\nelse branch\nt$16 <- 0\n"];
 n18 -> n19 [label="true"];
  n19 [label="(Node 19)\nif-join\n"];
 n19 -> n20 [label="true"];
  n20 [label="(Node 20)\nfcall-pre to out_int\nt$0 <- self.out_int(t$16,)\n"];
 n20 -> n21 [label="true"];
  n21 [label="(Node 21)\nfcall-post to out_int\nt$0 <- return\n"];
}
