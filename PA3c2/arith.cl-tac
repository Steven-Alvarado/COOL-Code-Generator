comment start
label A_value_0
t$0 <- var
return t$0
comment start
label A_set_var_0
t$1 <- num
var <- t$1
t$0 <- var
t$0 <- self
return t$0
comment start
label A_method1_0
t$0 <- self
return t$0
comment start
label A_method2_0
t$2 <- int 0
x <- t$2
t$3 <- num1
t$4 <- num2
t$5 <- + t$3 t$4
x <- t$5
t$0 <- x
t$6 <- new B
t$7 <- x
t$0 <- call set_var t$7
return t$0
comment start
label A_method3_0
t$8 <- int 0
x <- t$8
t$9 <- num
t$10 <- ~ t$9
x <- t$10
t$0 <- x
t$11 <- new C
t$12 <- x
t$0 <- call set_var t$12
return t$0
comment start
label A_method4_0
t$13 <- num2
t$14 <- num1
t$15 <- < t$13 t$14
t$16 <- not t$15
bt t$16 method4_l2
bt t$15 method4_l1
comment then branch
label method4_l1
t$17 <- int 0
x <- t$17
t$18 <- num1
t$19 <- num2
t$20 <- - t$18 t$19
x <- t$20
t$0 <- x
t$21 <- new D
t$22 <- x
t$0 <- call set_var t$22
jmp method4_l3
comment else branch
label method4_l2
t$23 <- int 0
x <- t$23
t$24 <- num2
t$25 <- num1
t$26 <- - t$24 t$25
x <- t$26
t$0 <- x
t$27 <- new D
t$28 <- x
t$0 <- call set_var t$28
t$0 <- t$0
jmp method4_l3
comment if-join
label method4_l3
return t$0
comment start
label A_method5_0
t$29 <- int 1
x <- t$29
t$30 <- int 1
y <- t$30
comment start
label method5_l0
jmp method5_l1
comment while-pred
label method5_l1
t$31 <- y
t$32 <- num
t$33 <- <= t$31 t$32
t$40 <- t$33
t$41 <- not t$40
bt t$41 method5_l2
bt t$40 method5_l3
comment while-join
label method5_l2
t$0 <- default Object
return t$0
comment while-body
label method5_l3
t$34 <- x
t$35 <- y
t$36 <- * t$34 t$35
x <- t$36
t$0 <- x
t$37 <- y
t$38 <- int 1
t$39 <- + t$37 t$38
y <- t$39
t$0 <- y
jmp method5_l1
t$43 <- new E
t$44 <- x
t$0 <- call set_var t$44
return t$0
comment start
label B_method5_0
t$45 <- int 0
x <- t$45
t$46 <- num
t$47 <- num
t$48 <- * t$46 t$47
x <- t$48
t$0 <- x
t$49 <- new E
t$50 <- x
t$0 <- call set_var t$50
return t$0
comment start
label C_method6_0
t$51 <- int 0
x <- t$51
t$52 <- num
t$53 <- ~ t$52
x <- t$53
t$0 <- x
t$54 <- new A
t$55 <- x
t$0 <- call set_var t$55
return t$0
comment start
label C_method5_0
t$56 <- int 0
x <- t$56
t$57 <- num
t$58 <- num
t$59 <- * t$57 t$58
t$60 <- num
t$61 <- * t$59 t$60
x <- t$61
t$0 <- x
t$62 <- new E
t$63 <- x
t$0 <- call set_var t$63
return t$0
comment start
label D_method7_0
t$64 <- num
x <- t$64
t$65 <- x
t$66 <- int 0
t$67 <- < t$65 t$66
t$68 <- not t$67
bt t$68 method7_l5
bt t$67 method7_l4
comment then branch
label method7_l4
t$69 <- x
t$70 <- ~ t$69
t$0 <- call method7 t$70
jmp method7_l6
comment else branch
label method7_l5
t$71 <- int 0
t$72 <- x
t$73 <- = t$71 t$72
t$74 <- not t$73
bt t$74 method7_l8
bt t$73 method7_l7
comment then branch
label method7_l7
t$75 <- bool true
jmp method7_l9
comment else branch
label method7_l8
t$76 <- int 1
t$77 <- x
t$78 <- = t$76 t$77
t$79 <- not t$78
bt t$79 method7_l11
bt t$78 method7_l10
comment then branch
label method7_l10
t$80 <- bool false
jmp method7_l12
comment else branch
label method7_l11
t$81 <- int 2
t$82 <- x
t$83 <- = t$81 t$82
t$84 <- not t$83
bt t$84 method7_l14
bt t$83 method7_l13
comment then branch
label method7_l13
t$85 <- bool false
jmp method7_l15
comment else branch
label method7_l14
t$86 <- x
t$87 <- int 3
t$88 <- - t$86 t$87
t$0 <- call method7 t$88
t$0 <- t$0
jmp method7_l15
comment if-join
label method7_l15
t$0 <- t$0
jmp method7_l12
comment if-join
label method7_l12
t$0 <- t$0
jmp method7_l9
comment if-join
label method7_l9
t$0 <- t$0
jmp method7_l6
comment if-join
label method7_l6
return t$0
comment start
label E_method6_0
t$89 <- int 0
x <- t$89
t$90 <- num
t$91 <- int 8
t$92 <- / t$90 t$91
x <- t$92
t$0 <- x
t$93 <- new A
t$94 <- x
t$0 <- call set_var t$94
return t$0
comment start
label A2I_c2i_0
t$95 <- char
t$96 <- string
0
t$97 <- = t$95 t$96
t$98 <- not t$97
bt t$98 c2i_l17
bt t$97 c2i_l16
comment then branch
label c2i_l16
t$99 <- int 0
jmp c2i_l18
comment else branch
label c2i_l17
t$100 <- char
t$101 <- string
1
t$102 <- = t$100 t$101
t$103 <- not t$102
bt t$103 c2i_l20
bt t$102 c2i_l19
comment then branch
label c2i_l19
t$104 <- int 1
jmp c2i_l21
comment else branch
label c2i_l20
t$105 <- char
t$106 <- string
2
t$107 <- = t$105 t$106
t$108 <- not t$107
bt t$108 c2i_l23
bt t$107 c2i_l22
comment then branch
label c2i_l22
t$109 <- int 2
jmp c2i_l24
comment else branch
label c2i_l23
t$110 <- char
t$111 <- string
3
t$112 <- = t$110 t$111
t$113 <- not t$112
bt t$113 c2i_l26
bt t$112 c2i_l25
comment then branch
label c2i_l25
t$114 <- int 3
jmp c2i_l27
comment else branch
label c2i_l26
t$115 <- char
t$116 <- string
4
t$117 <- = t$115 t$116
t$118 <- not t$117
bt t$118 c2i_l29
bt t$117 c2i_l28
comment then branch
label c2i_l28
t$119 <- int 4
jmp c2i_l30
comment else branch
label c2i_l29
t$120 <- char
t$121 <- string
5
t$122 <- = t$120 t$121
t$123 <- not t$122
bt t$123 c2i_l32
bt t$122 c2i_l31
comment then branch
label c2i_l31
t$124 <- int 5
jmp c2i_l33
comment else branch
label c2i_l32
t$125 <- char
t$126 <- string
6
t$127 <- = t$125 t$126
t$128 <- not t$127
bt t$128 c2i_l35
bt t$127 c2i_l34
comment then branch
label c2i_l34
t$129 <- int 6
jmp c2i_l36
comment else branch
label c2i_l35
t$130 <- char
t$131 <- string
7
t$132 <- = t$130 t$131
t$133 <- not t$132
bt t$133 c2i_l38
bt t$132 c2i_l37
comment then branch
label c2i_l37
t$134 <- int 7
jmp c2i_l39
comment else branch
label c2i_l38
t$135 <- char
t$136 <- string
8
t$137 <- = t$135 t$136
t$138 <- not t$137
bt t$138 c2i_l41
bt t$137 c2i_l40
comment then branch
label c2i_l40
t$139 <- int 8
jmp c2i_l42
comment else branch
label c2i_l41
t$140 <- char
t$141 <- string
9
t$142 <- = t$140 t$141
t$143 <- not t$142
bt t$143 c2i_l44
bt t$142 c2i_l43
comment then branch
label c2i_l43
t$144 <- int 9
jmp c2i_l45
comment else branch
label c2i_l44
t$0 <- call abort 
t$145 <- int 0
t$0 <- t$145
jmp c2i_l45
comment if-join
label c2i_l45
t$0 <- t$0
jmp c2i_l42
comment if-join
label c2i_l42
t$0 <- t$0
jmp c2i_l39
comment if-join
label c2i_l39
t$0 <- t$0
jmp c2i_l36
comment if-join
label c2i_l36
t$0 <- t$0
jmp c2i_l33
comment if-join
label c2i_l33
t$0 <- t$0
jmp c2i_l30
comment if-join
label c2i_l30
t$0 <- t$0
jmp c2i_l27
comment if-join
label c2i_l27
t$0 <- t$0
jmp c2i_l24
comment if-join
label c2i_l24
t$0 <- t$0
jmp c2i_l21
comment if-join
label c2i_l21
t$0 <- t$0
jmp c2i_l18
comment if-join
label c2i_l18
return t$0
comment start
label A2I_i2c_0
t$146 <- i
t$147 <- int 0
t$148 <- = t$146 t$147
t$149 <- not t$148
bt t$149 i2c_l47
bt t$148 i2c_l46
comment then branch
label i2c_l46
t$150 <- string
0
jmp i2c_l48
comment else branch
label i2c_l47
t$151 <- i
t$152 <- int 1
t$153 <- = t$151 t$152
t$154 <- not t$153
bt t$154 i2c_l50
bt t$153 i2c_l49
comment then branch
label i2c_l49
t$155 <- string
1
jmp i2c_l51
comment else branch
label i2c_l50
t$156 <- i
t$157 <- int 2
t$158 <- = t$156 t$157
t$159 <- not t$158
bt t$159 i2c_l53
bt t$158 i2c_l52
comment then branch
label i2c_l52
t$160 <- string
2
jmp i2c_l54
comment else branch
label i2c_l53
t$161 <- i
t$162 <- int 3
t$163 <- = t$161 t$162
t$164 <- not t$163
bt t$164 i2c_l56
bt t$163 i2c_l55
comment then branch
label i2c_l55
t$165 <- string
3
jmp i2c_l57
comment else branch
label i2c_l56
t$166 <- i
t$167 <- int 4
t$168 <- = t$166 t$167
t$169 <- not t$168
bt t$169 i2c_l59
bt t$168 i2c_l58
comment then branch
label i2c_l58
t$170 <- string
4
jmp i2c_l60
comment else branch
label i2c_l59
t$171 <- i
t$172 <- int 5
t$173 <- = t$171 t$172
t$174 <- not t$173
bt t$174 i2c_l62
bt t$173 i2c_l61
comment then branch
label i2c_l61
t$175 <- string
5
jmp i2c_l63
comment else branch
label i2c_l62
t$176 <- i
t$177 <- int 6
t$178 <- = t$176 t$177
t$179 <- not t$178
bt t$179 i2c_l65
bt t$178 i2c_l64
comment then branch
label i2c_l64
t$180 <- string
6
jmp i2c_l66
comment else branch
label i2c_l65
t$181 <- i
t$182 <- int 7
t$183 <- = t$181 t$182
t$184 <- not t$183
bt t$184 i2c_l68
bt t$183 i2c_l67
comment then branch
label i2c_l67
t$185 <- string
7
jmp i2c_l69
comment else branch
label i2c_l68
t$186 <- i
t$187 <- int 8
t$188 <- = t$186 t$187
t$189 <- not t$188
bt t$189 i2c_l71
bt t$188 i2c_l70
comment then branch
label i2c_l70
t$190 <- string
8
jmp i2c_l72
comment else branch
label i2c_l71
t$191 <- i
t$192 <- int 9
t$193 <- = t$191 t$192
t$194 <- not t$193
bt t$194 i2c_l74
bt t$193 i2c_l73
comment then branch
label i2c_l73
t$195 <- string
9
jmp i2c_l75
comment else branch
label i2c_l74
t$0 <- call abort 
t$196 <- string

t$0 <- t$196
jmp i2c_l75
comment if-join
label i2c_l75
t$0 <- t$0
jmp i2c_l72
comment if-join
label i2c_l72
t$0 <- t$0
jmp i2c_l69
comment if-join
label i2c_l69
t$0 <- t$0
jmp i2c_l66
comment if-join
label i2c_l66
t$0 <- t$0
jmp i2c_l63
comment if-join
label i2c_l63
t$0 <- t$0
jmp i2c_l60
comment if-join
label i2c_l60
t$0 <- t$0
jmp i2c_l57
comment if-join
label i2c_l57
t$0 <- t$0
jmp i2c_l54
comment if-join
label i2c_l54
t$0 <- t$0
jmp i2c_l51
comment if-join
label i2c_l51
t$0 <- t$0
jmp i2c_l48
comment if-join
label i2c_l48
return t$0
comment start
label A2I_a2i_0
t$197 <- s
t$0 <- call length 
t$198 <- int 0
t$199 <- = t$0 t$198
t$200 <- not t$199
bt t$200 a2i_l77
bt t$199 a2i_l76
comment then branch
label a2i_l76
t$201 <- int 0
jmp a2i_l78
comment else branch
label a2i_l77
t$202 <- s
t$203 <- int 0
t$204 <- int 1
t$0 <- call substr t$203, t$204
t$205 <- string
-
t$206 <- = t$0 t$205
t$207 <- not t$206
bt t$207 a2i_l80
bt t$206 a2i_l79
comment then branch
label a2i_l79
t$208 <- s
t$209 <- int 1
t$210 <- s
t$0 <- call length 
t$211 <- int 1
t$212 <- - t$0 t$211
t$0 <- call substr t$209, t$212
t$0 <- call a2i_aux t$0
t$213 <- ~ t$0
jmp a2i_l81
comment else branch
label a2i_l80
t$214 <- s
t$215 <- int 0
t$216 <- int 1
t$0 <- call substr t$215, t$216
t$217 <- string
+
t$218 <- = t$0 t$217
t$219 <- not t$218
bt t$219 a2i_l83
bt t$218 a2i_l82
comment then branch
label a2i_l82
t$220 <- s
t$221 <- int 1
t$222 <- s
t$0 <- call length 
t$223 <- int 1
t$224 <- - t$0 t$223
t$0 <- call substr t$221, t$224
t$0 <- call a2i_aux t$0
jmp a2i_l84
comment else branch
label a2i_l83
t$225 <- s
t$0 <- call a2i_aux t$225
t$0 <- t$0
jmp a2i_l84
comment if-join
label a2i_l84
t$0 <- t$0
jmp a2i_l81
comment if-join
label a2i_l81
t$0 <- t$0
jmp a2i_l78
comment if-join
label a2i_l78
return t$0
comment start
label A2I_a2i_aux_0
t$226 <- int 0
int <- t$226
t$227 <- s
t$0 <- call length 
j <- t$0
t$228 <- int 0
i <- t$228
comment start
label a2i_aux_l0
jmp a2i_aux_l1
comment while-pred
label a2i_aux_l1
t$229 <- i
t$230 <- j
t$231 <- < t$229 t$230
t$242 <- t$231
t$243 <- not t$242
bt t$243 a2i_aux_l2
bt t$242 a2i_aux_l3
comment while-join
label a2i_aux_l2
t$0 <- default Object
return t$0
comment while-body
label a2i_aux_l3
t$232 <- int
t$233 <- int 10
t$234 <- * t$232 t$233
t$235 <- s
t$236 <- i
t$237 <- int 1
t$0 <- call substr t$236, t$237
t$0 <- call c2i t$0
t$238 <- + t$234 t$0
int <- t$238
t$0 <- int
t$239 <- i
t$240 <- int 1
t$241 <- + t$239 t$240
i <- t$241
t$0 <- i
jmp a2i_aux_l1
t$245 <- int
t$0 <- t$245
return t$0
comment start
label A2I_i2a_0
t$246 <- i
t$247 <- int 0
t$248 <- = t$246 t$247
t$249 <- not t$248
bt t$249 i2a_l5
bt t$248 i2a_l4
comment then branch
label i2a_l4
t$250 <- string
0
jmp i2a_l6
comment else branch
label i2a_l5
t$251 <- int 0
t$252 <- i
t$253 <- < t$251 t$252
t$254 <- not t$253
bt t$254 i2a_l8
bt t$253 i2a_l7
comment then branch
label i2a_l7
t$255 <- i
t$0 <- call i2a_aux t$255
jmp i2a_l9
comment else branch
label i2a_l8
t$256 <- string
-
t$257 <- i
t$258 <- int 1
t$259 <- ~ t$258
t$260 <- * t$257 t$259
t$0 <- call i2a_aux t$260
t$0 <- call concat t$0
t$0 <- t$0
jmp i2a_l9
comment if-join
label i2a_l9
t$0 <- t$0
jmp i2a_l6
comment if-join
label i2a_l6
return t$0
comment start
label A2I_i2a_aux_0
t$261 <- i
t$262 <- int 0
t$263 <- = t$261 t$262
t$264 <- not t$263
bt t$264 i2a_aux_l11
bt t$263 i2a_aux_l10
comment then branch
label i2a_aux_l10
t$265 <- string

jmp i2a_aux_l12
comment else branch
label i2a_aux_l11
t$266 <- i
t$267 <- int 10
t$268 <- / t$266 t$267
next <- t$268
t$269 <- next
t$0 <- call i2a_aux t$269
t$270 <- i
t$271 <- next
t$272 <- int 10
t$273 <- * t$271 t$272
t$274 <- - t$270 t$273
t$0 <- call i2c t$274
t$0 <- call concat t$0
t$0 <- t$0
jmp i2a_aux_l12
comment if-join
label i2a_aux_l12
return t$0
comment start
label Main_menu_0
t$275 <- string
\n\tTo add a number to 
t$0 <- call out_string t$275
t$276 <- avar
t$0 <- call print t$276
t$277 <- string
...enter a:\n
t$0 <- call out_string t$277
t$278 <- string
\tTo negate 
t$0 <- call out_string t$278
t$279 <- avar
t$0 <- call print t$279
t$280 <- string
...enter b:\n
t$0 <- call out_string t$280
t$281 <- string
\tTo find the difference between 
t$0 <- call out_string t$281
t$282 <- avar
t$0 <- call print t$282
t$283 <- string
and another number...enter c:\n
t$0 <- call out_string t$283
t$284 <- string
\tTo find the factorial of 
t$0 <- call out_string t$284
t$285 <- avar
t$0 <- call print t$285
t$286 <- string
...enter d:\n
t$0 <- call out_string t$286
t$287 <- string
\tTo square 
t$0 <- call out_string t$287
t$288 <- avar
t$0 <- call print t$288
t$289 <- string
...enter e:\n
t$0 <- call out_string t$289
t$290 <- string
\tTo cube 
t$0 <- call out_string t$290
t$291 <- avar
t$0 <- call print t$291
t$292 <- string
...enter f:\n
t$0 <- call out_string t$292
t$293 <- string
\tTo find out if 
t$0 <- call out_string t$293
t$294 <- avar
t$0 <- call print t$294
t$295 <- string
is a multiple of 3...enter g:\n
t$0 <- call out_string t$295
t$296 <- string
\tTo divide 
t$0 <- call out_string t$296
t$297 <- avar
t$0 <- call print t$297
t$298 <- string
by 8...enter h:\n
t$0 <- call out_string t$298
t$299 <- string
\tTo get a new number...enter j:\n
t$0 <- call out_string t$299
t$300 <- string
\tTo quit...enter q:\n\n
t$0 <- call out_string t$300
t$0 <- call in_string 
return t$0
comment start
label Main_prompt_0
t$301 <- string
\n
t$0 <- call out_string t$301
t$302 <- string
Please enter a number...  
t$0 <- call out_string t$302
t$0 <- call in_string 
return t$0
comment start
label Main_get_int_0
t$303 <- new A2I
z <- t$303
t$0 <- call prompt 
s <- t$0
t$304 <- z
t$305 <- s
t$0 <- call a2i t$305
return t$0
comment start
label Main_is_even_0
t$306 <- num
x <- t$306
t$307 <- x
t$308 <- int 0
t$309 <- < t$307 t$308
t$310 <- not t$309
bt t$310 is_even_l14
bt t$309 is_even_l13
comment then branch
label is_even_l13
t$311 <- x
t$312 <- ~ t$311
t$0 <- call is_even t$312
jmp is_even_l15
comment else branch
label is_even_l14
t$313 <- int 0
t$314 <- x
t$315 <- = t$313 t$314
t$316 <- not t$315
bt t$316 is_even_l17
bt t$315 is_even_l16
comment then branch
label is_even_l16
t$317 <- bool true
jmp is_even_l18
comment else branch
label is_even_l17
t$318 <- int 1
t$319 <- x
t$320 <- = t$318 t$319
t$321 <- not t$320
bt t$321 is_even_l20
bt t$320 is_even_l19
comment then branch
label is_even_l19
t$322 <- bool false
jmp is_even_l21
comment else branch
label is_even_l20
t$323 <- x
t$324 <- int 2
t$325 <- - t$323 t$324
t$0 <- call is_even t$325
t$0 <- t$0
jmp is_even_l21
comment if-join
label is_even_l21
t$0 <- t$0
jmp is_even_l18
comment if-join
label is_even_l18
t$0 <- t$0
jmp is_even_l15
comment if-join
label is_even_l15
return t$0
comment start
label Main_class_type_0
t$326 <- var
t$328 <- string
Class type is now A\n
t$0 <- call out_string t$328
t$327 <- t$0
t$329 <- string
Class type is now B\n
t$0 <- call out_string t$329
t$327 <- t$0
t$330 <- string
Class type is now C\n
t$0 <- call out_string t$330
t$327 <- t$0
t$331 <- string
Class type is now D\n
t$0 <- call out_string t$331
t$327 <- t$0
t$332 <- string
Class type is now E\n
t$0 <- call out_string t$332
t$327 <- t$0
t$333 <- string
Oooops\n
t$0 <- call out_string t$333
t$327 <- t$0
t$0 <- t$327
return t$0
comment start
label Main_print_0
t$334 <- new A2I
z <- t$334
t$335 <- z
t$336 <- var
t$0 <- call value 
t$0 <- call i2a t$0
t$0 <- call out_string t$0
t$337 <- string
 
t$0 <- call out_string t$337
return t$0
comment start
label Main_main_0
t$338 <- new A
avar <- t$338
t$0 <- avar
comment start
label main_l0
jmp main_l1
comment while-pred
label main_l1
t$339 <- flag
t$444 <- t$339
t$445 <- not t$444
bt t$445 main_l2
bt t$444 main_l3
comment while-join
label main_l2
t$0 <- default Object
return t$0
comment while-body
label main_l3
t$340 <- string
number 
t$0 <- call out_string t$340
t$341 <- avar
t$0 <- call print t$341
t$342 <- avar
t$0 <- call value 
t$0 <- call is_even t$0
t$343 <- not t$0
bt t$343 main_l5
bt t$0 main_l4
comment then branch
label main_l4
t$344 <- string
is even!\n
t$0 <- call out_string t$344
jmp main_l6
comment else branch
label main_l5
t$345 <- string
is odd!\n
t$0 <- call out_string t$345
t$0 <- t$0
jmp main_l6
comment if-join
label main_l6
t$346 <- avar
t$0 <- call class_type t$346
t$0 <- call menu 
char <- t$0
t$0 <- char
t$347 <- char
t$348 <- string
a
t$349 <- = t$347 t$348
t$350 <- not t$349
bt t$350 main_l8
bt t$349 main_l7
comment then branch
label main_l7
t$351 <- new A
t$0 <- call get_int 
t$0 <- call set_var t$0
a_var <- t$0
t$0 <- a_var
t$352 <- new B
t$353 <- avar
t$0 <- call value 
t$354 <- a_var
t$0 <- call value 
t$0 <- call method2 t$0, t$0
avar <- t$0
t$0 <- avar
jmp main_l9
comment else branch
label main_l8
t$355 <- char
t$356 <- string
b
t$357 <- = t$355 t$356
t$358 <- not t$357
bt t$358 main_l11
bt t$357 main_l10
comment then branch
label main_l10
t$359 <- avar
t$361 <- c
t$362 <- c
t$0 <- call value 
t$0 <- call method6 t$0
avar <- t$0
t$0 <- avar
t$360 <- t$0
t$363 <- a
t$364 <- a
t$0 <- call value 
t$0 <- call method3 t$0
avar <- t$0
t$0 <- avar
t$360 <- t$0
t$365 <- string
Oooops\n
t$0 <- call out_string t$365
t$0 <- call abort 
t$366 <- int 0
t$360 <- t$366
jmp main_l12
comment else branch
label main_l11
t$367 <- char
t$368 <- string
c
t$369 <- = t$367 t$368
t$370 <- not t$369
bt t$370 main_l20
bt t$369 main_l19
comment then branch
label main_l19
t$371 <- new A
t$0 <- call get_int 
t$0 <- call set_var t$0
a_var <- t$0
t$0 <- a_var
t$372 <- new D
t$373 <- avar
t$0 <- call value 
t$374 <- a_var
t$0 <- call value 
t$0 <- call method4 t$0, t$0
avar <- t$0
t$0 <- avar
jmp main_l21
comment else branch
label main_l20
t$375 <- char
t$376 <- string
d
t$377 <- = t$375 t$376
t$378 <- not t$377
bt t$378 main_l23
bt t$377 main_l22
comment then branch
label main_l22
t$379 <- new C
t$380 <- avar
t$0 <- call value 
t$381 <- call method5 t$0
avar <- t$381
t$0 <- avar
jmp main_l24
comment else branch
label main_l23
t$382 <- char
t$383 <- string
e
t$384 <- = t$382 t$383
t$385 <- not t$384
bt t$385 main_l26
bt t$384 main_l25
comment then branch
label main_l25
t$386 <- new C
t$387 <- avar
t$0 <- call value 
t$388 <- call method5 t$0
avar <- t$388
t$0 <- avar
jmp main_l27
comment else branch
label main_l26
t$389 <- char
t$390 <- string
f
t$391 <- = t$389 t$390
t$392 <- not t$391
bt t$392 main_l29
bt t$391 main_l28
comment then branch
label main_l28
t$393 <- new C
t$394 <- avar
t$0 <- call value 
t$395 <- call method5 t$0
avar <- t$395
t$0 <- avar
jmp main_l30
comment else branch
label main_l29
t$396 <- char
t$397 <- string
g
t$398 <- = t$396 t$397
t$399 <- not t$398
bt t$399 main_l32
bt t$398 main_l31
comment then branch
label main_l31
t$400 <- new D
t$401 <- avar
t$0 <- call value 
t$0 <- call method7 t$0
t$402 <- not t$0
bt t$402 main_l35
bt t$0 main_l34
comment then branch
label main_l34
t$403 <- string
number 
t$0 <- call out_string t$403
t$404 <- avar
t$0 <- call print t$404
t$405 <- string
is divisible by 3.\n
t$0 <- call out_string t$405
jmp main_l36
comment else branch
label main_l35
t$406 <- string
number 
t$0 <- call out_string t$406
t$407 <- avar
t$0 <- call print t$407
t$408 <- string
is not divisible by 3.\n
t$0 <- call out_string t$408
t$0 <- t$0
jmp main_l36
comment if-join
label main_l36
jmp main_l33
comment else branch
label main_l32
t$409 <- char
t$410 <- string
h
t$411 <- = t$409 t$410
t$412 <- not t$411
bt t$412 main_l38
bt t$411 main_l37
comment then branch
label main_l37
t$414 <- string
A
t$413 <- new t$414
x <- t$413
t$415 <- new E
t$416 <- avar
t$0 <- call value 
t$0 <- call method6 t$0
x <- t$0
t$0 <- x
t$417 <- avar
t$0 <- call value 
t$418 <- x
t$0 <- call value 
t$419 <- int 8
t$420 <- * t$0 t$419
t$421 <- - t$0 t$420
r <- t$421
t$422 <- string
number 
t$0 <- call out_string t$422
t$423 <- avar
t$0 <- call print t$423
t$424 <- string
is equal to 
t$0 <- call out_string t$424
t$425 <- x
t$0 <- call print t$425
t$426 <- string
times 8 with a remainder of 
t$0 <- call out_string t$426
t$427 <- new A2I
a <- t$427
t$428 <- a
t$429 <- r
t$0 <- call i2a t$429
t$0 <- call out_string t$0
t$430 <- string
\n
t$0 <- call out_string t$430
t$431 <- x
avar <- t$431
t$0 <- avar
jmp main_l39
comment else branch
label main_l38
t$432 <- char
t$433 <- string
j
t$434 <- = t$432 t$433
t$435 <- not t$434
bt t$435 main_l41
bt t$434 main_l40
comment then branch
label main_l40
t$436 <- new A
avar <- t$436
t$0 <- avar
jmp main_l42
comment else branch
label main_l41
t$437 <- char
t$438 <- string
q
t$439 <- = t$437 t$438
t$440 <- not t$439
bt t$440 main_l44
bt t$439 main_l43
comment then branch
label main_l43
t$441 <- bool false
flag <- t$441
t$0 <- flag
jmp main_l45
comment else branch
label main_l44
t$442 <- new A
t$443 <- avar
t$0 <- call value 
t$0 <- call method1 t$0
avar <- t$0
t$0 <- avar
t$0 <- t$0
jmp main_l45
comment if-join
label main_l45
t$0 <- t$0
jmp main_l42
comment if-join
label main_l42
t$0 <- t$0
jmp main_l39
comment if-join
label main_l39
t$0 <- t$0
jmp main_l33
comment if-join
label main_l33
t$0 <- t$0
jmp main_l30
comment if-join
label main_l30
t$0 <- t$0
jmp main_l27
comment if-join
label main_l27
t$0 <- t$0
jmp main_l24
comment if-join
label main_l24
t$0 <- t$0
jmp main_l21
comment if-join
label main_l21
t$0 <- t$0
jmp main_l12
comment if-join
label main_l12
t$0 <- t$0
jmp main_l9
comment if-join
label main_l9
jmp main_l1
t$0 <- t$446
return t$0
